# Ring the bell if any background window rang a bell
set -g bell-action any

# Enable mouse mode
set-option -g -q mouse on

# Improve colors
set -g default-terminal 'screen-256color'

# Screen like binding
unbind C-b
set -g prefix C-f

# Start window numbers at 1 to match keyboard layout
set -g base-index 1
set-window-option -g pane-base-index 1

# Renumber windows sequentially after closing one
set -g renumber-windows on

# Increase history
set -g history-limit 10000

# No escape time when working in vim
set -sg escape-time 10

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Act like vi in copy and choice modes
setw -g mode-keys vi

# Highlight windows with activity
setw -g monitor-activity on

# By default clear previous name when renaming
bind-key , command-prompt "rename-window '%%'"

# Fix pbpaste, pbcopy and launchctl
set-option -g default-command "reattach-to-user-namespace -l zsh"
bind C-c run "tmux show-buffer | reattach-to-user-namespace pbcopy"
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Pane movement h,j,k,l
#bind-key -r h select-pane -L
#bind-key -r j select-pane -D
#bind-key -r k select-pane -U
#bind-key -r l select-pane -R
# Smart pane switching with awareness of vim splits
# Note that this requires vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l`
# Pane resizing H,J,K,L
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5
# Window movement C-n,C-p
bind-key -r C-p select-window -t :-
bind-key -r C-n select-window -t :+
# Last-window
bind-key -r a last-window
# Send prefix
bind-key C-f send-prefix
# Detach client
bind-key ^D detach-client
# Split window
unbind '"'
unbind %
bind-key - split-window -c "#{pane_current_path}"
bind-key _ split-window -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"
# New window
bind-key c new-window -c "#{pane_current_path}"
# Send input to all panes in a window
bind-key e setw synchronize-panes on
bind-key E setw synchronize-panes off
# Rebind screen clearing
bind-key C-l send-keys 'C-l'

# Use vim keybindings in copy mode
setw -g mode-keys vi

bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Escape send -X cancel
# Option to copy by dragging the mouse
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
# Option to copy by using Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Scroll using mouse wheel
# bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
# bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
# bind-key -T copy-mode-vi WheelUpPane send -N5 -X scroll-up
# bind-key -T copy-mode-vi WheelDownPane send -N5 -X scroll-down

# Scroll using page up and down
#bind-key -T copy-mode-vi PPage page-up
#bind-key -T copy-mode-vi NPage page-down

bind-key -T copy-mode-vi WheelUpPane send-keys -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X scroll-down

# Move the status bar to the top
set-option -g status-position top

# This tmux statusbar config was created by tmuxline.vim
set -g status-justify "centre"
set -g status "on"
set -g status-attr "none"
set -g message-command-bg "colour240"
set -g status-left-length "100"
set -g pane-active-border-fg "colour216"
set -g status-bg "colour238"
set -g message-command-fg "colour252"
set -g pane-border-fg "colour240"
set -g message-bg "colour240"
set -g status-left-attr "none"
set -g status-right-attr "none"
set -g status-right-length "100"
set -g message-fg "colour252"
setw -g window-status-fg "colour248"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour238"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour216"
setw -g window-status-separator ""
setw -g window-status-bg "colour238"
set -g status-left "#[fg=colour238,bg=colour216] #S #[fg=colour216,bg=colour240,nobold,nounderscore,noitalics]#[fg=colour252,bg=colour240] #F #[fg=colour240,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour248,bg=colour238] #W #[fg=colour238,bg=colour238,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour238,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour248,bg=colour238] %a #[fg=colour240,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour247,bg=colour240] %b %d  %R #[fg=colour244,bg=colour240,nobold,nounderscore,noitalics]#[fg=colour238,bg=colour244] #H "
setw -g window-status-format "#[fg=colour238,bg=colour238,nobold,nounderscore,noitalics]#[default] #I  #W #[fg=colour238,bg=colour238,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour238,bg=colour240,nobold,nounderscore,noitalics]#[fg=colour252,bg=colour240] #I  #W #[fg=colour240,bg=colour238,nobold,nounderscore,noitalics]"
